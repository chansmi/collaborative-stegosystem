
Using the `SDPA` attention implementation on multi-gpu setup with ROCM may lead to performance issues due to the FA backend. Disabling it to use alternative backends.
/usr/workspace/smith585/x86_miniconda/lib/python3.12/site-packages/trl/trainer/ppo_trainer.py:267: UserWarning: No dataset is provided. Make sure to set config.batch_size to the correct value before training.
  warnings.warn(
/usr/workspace/smith585/x86_miniconda/lib/python3.12/site-packages/trl/trainer/ppo_trainer.py:276: UserWarning: No dataset is provided. In a multi-GPU setting, this will lead to an error. You should prepare your dataloader yourself with `dataloader = ppo_trainer.accelerator.prepare(dataloader)` and using `torch.utils.data.DataLoader`, or pass a dataset to the `PPOTrainer`. Please  refer to the documentation for more details.
  warnings.warn(
Epoch 1/10:   0%|                                                                                                                  | 0/3 [00:00<?, ?it/s]You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
[' none', ' give', ' (', ' Hue', ' you', ' None', ' S', '???', ' 10', ' http', ' Triple', '\n', ' 0', ' ***', ' Daylight', ' black', ' blue', ' white', ' 5', ' 0', '\n', ' ----', ' $', '\n', ' 1', ' Click', ' 4', ' Drop', ' 1', ' Default', ' Only', ' 16', ' 1', ' Click', ' This', ' Use', ' Morph', ' red', '\n', ' Light', ' White', ' *', ' 0', ' 0', ' 2', ' Total', ' Black', ' 0', ' Custom', ' 30', ' When', ' "', ' Speech', ' Black', ' The', '!', ' $', '\n', ' Deal', ' INT', ' Top', ' 6', ' Choose', ' $']
[' M', ' [', ' )', ' Parameters', '\n', ' Read', '\n', '\n', " '", ' for', ' action', '\n', '\n', ' https', ' you', '\n', '\n', ' join', ' 01', " '", '\n', ' when', ' Is', ' false', ' 6', ' or', ' whatever', ' dir', ' Continent', ' Clean', " '", '\n', ' (', 'While', ' For', ' some', ' A', ' 50', ' the', ' <', ' ^', " '", ' 05', ' set', ' else', ' for', " '", ' Input', ' expect', "''", ' //', ' Example', ' this', ' [', ' def', " '", ' $', '\n', ' {', ' re', ' def', ' )', ' Output', ' $']
Epoch 1/10:  33%|███████████████████████████████████                                                                      | 1/3 [03:38<07:16, 218.31s/it]
{'objective/kl': array(0., dtype=float32), 'objective/kl_dist': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), 'objective/logprobs': array([[-9.114504 , -2.442901 , -4.0344734, ..., -2.0427384, -4.7641454,
        -6.671714 ],
       [-9.114504 , -2.442901 , -4.0344734, ..., -1.9969673, -4.597601 ,
        -9.744654 ],
       [-9.114505 , -2.442901 , -3.9673264, ..., -2.0083761, -4.35879  ,
        -5.5061455],
       ...,
       [-9.067972 , -2.5795722, -3.8665686, ..., -1.9977874, -4.3567553,
        -6.1294527],
       [-9.067973 , -2.5795722, -3.7415686, ..., -1.9306719, -4.4729323,
        -3.9636426],
       [-9.103502 , -2.4533033, -3.9992065, ..., -2.1038678, -4.3476977,
        -4.2093363]], dtype=float32), 'objective/ref_logprobs': array([[-9.114504 , -2.442901 , -4.0344734, ..., -2.0427384, -4.7641454,
        -6.671714 ],
       [-9.114504 , -2.442901 , -4.0344734, ..., -1.9969673, -4.597601 ,
        -9.744654 ],
       [-9.114505 , -2.442901 , -3.9673264, ..., -2.0083761, -4.35879  ,
        -5.5061455],
       ...,
       [-9.067972 , -2.5795722, -3.8665686, ..., -1.9977874, -4.3567553,
        -6.1294527],
       [-9.067973 , -2.5795722, -3.7415686, ..., -1.9306719, -4.4729323,
        -3.9636426],
       [-9.103502 , -2.4533033, -3.9992065, ..., -2.1038678, -4.3476977,
        -4.2093363]], dtype=float32), 'objective/kl_coef': 0.2, 'objective/entropy': array(6.003698, dtype=float32), 'ppo/mean_non_score_reward': array(0., dtype=float32), 'ppo/mean_scores': array(-0.99492186, dtype=float32), 'ppo/std_scores': array(0.02643286, dtype=float32), 'tokens/queries_len_mean': 19.0, 'tokens/queries_len_std': 0.0, 'tokens/queries_dist': array([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.],
      dtype=float32), 'tokens/responses_len_mean': 1.0, 'tokens/responses_len_std': 0.0, 'tokens/responses_dist': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=float32), 'ppo/loss/policy': array([-0.00135622], dtype=float32), 'ppo/loss/value': array([14.464706], dtype=float32), 'ppo/loss/total': array([1.4451144], dtype=float32), 'ppo/policy/entropy': array([6.366605], dtype=float32), 'ppo/policy/approxkl': array([0.08127999], dtype=float32), 'ppo/policy/policykl': array([0.07740393], dtype=float32), 'ppo/policy/clipfrac': array([0.6046876], dtype=float32), 'ppo/policy/advantages': array([27.527924 , 27.443365 , 27.353455 , ..., 25.271936 , 25.044653 ,
        0.4958177], dtype=float32), 'ppo/policy/advantages_mean': array([-1.0386809e-06], dtype=float32), 'ppo/policy/ratio': array([0.99343556, 1.1361054 , 0.88349545, ..., 1.4018371 , 0.7884575 ,
       1.5449117 ], dtype=float32), 'ppo/returns/mean': array([-0.99492186], dtype=float32), 'ppo/returns/var': array([0.00072187], dtype=float32), 'ppo/val/vpred': array([4.0321474], dtype=float32), 'ppo/val/error': array([25.3475], dtype=float32), 'ppo/val/clipfrac': array([0.95], dtype=float32), 'ppo/val/mean': array([4.475342], dtype=float32), 'ppo/val/var': array([0.03340358], dtype=float32), 'ppo/val/var_explained': array([-43114.7], dtype=float32), 'ppo/learning_rate': 5e-06, 'time/ppo/forward_pass': 3.396127462387085, 'time/ppo/compute_rewards': 0.008908271789550781, 'time/ppo/compute_advantages': 0.0016050338745117188, 'time/ppo/optimize_step': 22.519026517868042, 'time/ppo/calc_stats': 0.10503077507019043, 'time/ppo/total': 26.03090500831604}
[' OK', ' 0', ' 1', '\n', ' Choose', ' and', ' green', ' chosen', ' Pick', ' Choose', ' Choice', ' $', ' 1', ' red', '\n\n', ' flip', ' choose', ' 0', ' Different', ' Select', ' Choose', 'and', ' Use', ' For', ' Red', ' D', ' 0', ' Potion', ' Clear', '\n', ' choose', ' Fast', ' )', '\n', ' white', ' Chain', ' 100', ' Blue', ' choose', ' use', ' Red', ' 0', ' red', ' options', ' Choose', ' Choose', ' (-', ' So', ' 4', ' Choose', ' Which', ' Comments', ' Choose', ' applying', ' 1', '\n', ' 1936', ' Zero', ' color', ' Default', ' 0', ' 1', ' 0', '\n']
[" '", ' Res', ' Load', '\n\n', ' 10', ' now', ' [', "'", '\n', ':', '\n', ' 0', ' <', ' The', '.', '52', 'For', ' a', "'", ' Not', " '", '\n', ' *', ' 1', '\n', ' Pass', ' Some', ' width', ' 1', ' Count', ' After', '\n', ' [', ' now', ' */', '\n', ' Log', ' Do', ' if', '\n', ' encode', ' 1', ' []', ' loading', ' �', ' -', ' ;', ' \\', ' "', ' Opt', ' Either', ' with', ' c', ' while', '\n', ' status', ' got', ' db', './', ' --', ' If', '\n', ' Example', ' 1']
{'objective/kl': array(0.18397483, dtype=float32), 'objective/kl_dist': array([-0.20338154,  0.44427705, -0.11941016, -0.27847052,  0.6225976 ,
        0.31453395,  0.23172736,  0.56012917,  0.19717896,  0.6865448 ,
        0.62402534, -0.5059984 , -0.09424543,  0.3353486 , -0.24678576,
        0.19083309,  1.1389134 ,  0.03409749,  0.41090584,  0.31048608,
        0.6225976 ,  0.4824083 , -0.23565006, -0.10005522, -0.07906038,
        0.18654466,  0.05671895,  0.24400187,  0.18691063,  0.10223794,
        1.1282142 ,  0.16058421,  0.2802658 , -0.05572283,  0.1609056 ,
        0.221529  , -0.1274023 , -0.18546605,  1.1991048 ,  0.84531355,
       -0.30282104,  0.06154466,  0.5567188 ,  0.24400187,  0.6557547 ,
        0.37504315,  0.50321436,  0.17066717,  0.5302658 ,  0.6590977 ,
        0.16090572, -0.6450356 ,  0.5816279 ,  0.27165914, -0.33351797,
       -0.18987083, -0.2040596 , -0.14933372,  0.12402534, -0.00599837,
       -0.09424531, -0.41465163, -0.08363998, -0.44424957], dtype=float32), 'objective/logprobs': array([[-9.062229 , -2.353875 , -4.143071 , ..., -2.003496 , -4.739885 ,
        -6.6264973],
       [-9.062229 , -2.353875 , -4.143071 , ..., -1.9936404, -4.7901125,
        -5.050376 ],
       [-9.064877 , -2.6393585, -4.218216 , ..., -2.293301 , -4.8907695,
        -3.5005558],
       ...,
       [-9.1322   , -2.6514661, -4.22091  , ..., -2.0536613, -4.7404757,
        -3.6946425],
       [-9.1322   , -2.6514661, -4.22091  , ..., -2.0407264, -4.811673 ,
        -2.6722827],
       [-9.0640745, -2.5163016, -4.213871 , ..., -1.9002275, -4.7050343,
        -2.653586 ]], dtype=float32), 'objective/ref_logprobs': array([[-9.114504 , -2.442901 , -4.0344734, ..., -2.044503 , -4.5234485,
        -6.4231157],
       [-9.114504 , -2.442901 , -4.0344734, ..., -1.9969673, -4.597601 ,
        -5.494653 ],
       [-9.114505 , -2.442901 , -3.9673264, ..., -2.0083761, -4.35879  ,
        -3.3811455],
       ...,
       [-9.067972 , -2.5795722, -3.9915686, ..., -1.9893681, -4.3381953,
        -3.2799911],
       [-9.067973 , -2.5795722, -3.7415686, ..., -1.9306719, -4.4729323,
        -2.5886426],
       [-9.103502 , -2.4533033, -3.9992065, ..., -2.1038678, -4.3476977,
        -2.2093365]], dtype=float32), 'objective/kl_coef': 0.19897600000000001, 'objective/entropy': array(5.5613914, dtype=float32), 'ppo/mean_non_score_reward': array(-0.03660658, dtype=float32), 'ppo/mean_scores': array(-0.990625, dtype=float32), 'ppo/std_scores': array(0.02937848, dtype=float32), 'tokens/queries_len_mean': 19.0, 'tokens/queries_len_std': 0.0, 'tokens/queries_dist': array([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.],
      dtype=float32), 'tokens/responses_len_mean': 1.0, 'tokens/responses_len_std': 0.0, 'tokens/responses_dist': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=float32), 'ppo/loss/policy': array([0.0087705], dtype=float32), 'ppo/loss/value': array([12.64596], dtype=float32), 'ppo/loss/total': array([1.2733665], dtype=float32), 'ppo/policy/entropy': array([6.3140306], dtype=float32), 'ppo/policy/approxkl': array([0.09252458], dtype=float32), 'ppo/policy/policykl': array([0.10355933], dtype=float32), 'ppo/policy/clipfrac': array([0.453125], dtype=float32), 'ppo/policy/advantages': array([2.3266502e+01, 2.3199518e+01, 2.3128302e+01, ..., 2.1040649e+01,
       2.0832851e+01, 1.3493598e-03], dtype=float32), 'ppo/policy/advantages_mean': array([-7.074792e-07], dtype=float32), 'ppo/policy/ratio': array([0.99939936, 1.3297095 , 1.0841256 , ..., 0.86806786, 0.8410317 ,

Epoch 1/10:  67%|██████████████████████████████████████████████████████████████████████                                   | 2/3 [04:29<01:59, 119.88s/it]
['\n', ' 0', '\n', ' Choose', ' default', '0', ' your', '\n', ' Select', ' 2', ' B', ' from', '\n', ' 0', ' Choose', ' 1', ' ha', '\n', ' Add', ' choose', ' "', ' No', ' Angry', ' all', ' White', ' 0', ' A', 'LED', ' make', ' 0', ' Enter', ' Choose', ' gray', '\n', ' Value', '\n', 'ec', ' Both', ' chose', ' Health', ' Yes', ' reflect', ' in', ' file', ' Black', ' No', ' Uses', ' One', '!!', ' "', ' with', ' Standard', ' Show', ' interface', ' true', ' blue', ' $', ' an', ' acceptable', ' 380', ' any', ' green', ' Switch', ' 7']
[' 0', ' /', ' {', ' In', '\n', '\n', " '", ' o', ' close', ' [', '\n\n', " '", ' cereal', ' write', ' 0', ' {', " '", ' 0', ' Operation', ' ', '\n', ' 0', ' The', ' [', ' "', ' 0', ' 0', ' in', ' abs', ' mem', ' 1', ' Query', ' {', ' in', ' src', '\n', ' all', ' in', ' u', ' Work', ' ', ' c', '\n', ' ', ' 0', ' [', ',', "'", ' %', '",', ' 0', ' Option', ' this', ' |', " '", '\n', ' 1', ' a', ' →', ' numbers', ' undefined', ' 1', ' -', " '"]
{'objective/kl': array(0.05628029, dtype=float32), 'objective/kl_dist': array([-0.35636812,  0.08457315, -0.5313938 ,  0.33442545, -0.56528735,
        1.1602187 ,  0.0992763 , -0.23866767,  0.5927086 , -0.24216175,
       -0.28169274, -0.7229954 , -0.00456965, -0.03772402,  0.43090826,
       -0.20025367,  0.4662404 , -0.26488662,  0.8888006 ,  0.5363841 ,
        0.30971265,  0.03521872, -0.06813282,  0.13476396, -0.16281629,
        0.0775249 ,  0.05806684,  1.6758958 ,  0.49543035, -0.03772402,
        0.316221  ,  0.57459915, -0.3885436 , -0.26488662, -0.78139377,
       -0.10307455,  1.9313011 , -0.21478128,  0.05686712, -0.4902358 ,
       -0.2822919 , -0.04747534, -0.35217357,  0.38270044, -0.1835692 ,
       -0.15146935,  0.31622124, -0.27554798, -0.10636783,  0.3970735 ,
        0.03110623, -0.4636159 , -0.44199336,  0.29743218, -0.4007237 ,
       -0.36680424,  0.09270811,  0.17486823, -0.19193316, -0.28549504,
        0.49543047,  0.66103065, -0.17346632,  0.17474651], dtype=float32), 'objective/logprobs': array([[-9.077126 , -2.433958 , -4.235013 , ..., -2.2239535, -4.781781 ,
        -2.903549 ],
       [-9.077126 , -2.433958 , -4.235013 , ..., -2.2751956, -4.7472405,
        -2.6730766],
       [-9.067524 , -2.4329891, -4.234236 , ..., -2.2950256, -4.8312864,
        -3.065071 ],
       ...,
       [-9.080818 , -2.435203 , -4.208527 , ..., -2.1429937, -4.773803 ,
        -4.942884 ],
       [-9.080818 , -2.435203 , -4.208527 , ..., -2.2673457, -4.7490664,
        -7.887109 ],
       [-9.081039 , -2.4352033, -4.2217107, ..., -2.037036 , -4.7816854,
        -6.03459  ]], dtype=float32), 'objective/ref_logprobs': array([[-9.114504 , -2.442901 , -4.0344734, ..., -2.0433266, -4.6839128,
        -2.5471811],
       [-9.114504 , -2.442901 , -4.0344734, ..., -2.012383 , -4.5188556,
        -2.7576501],
       [-9.114505 , -2.442901 , -3.9673264, ..., -1.98563  , -4.4142184,
        -2.5336773],
       ...,
       [-9.067972 , -2.5795722, -3.7415683, ..., -2.0062065, -4.3753157,
        -5.6039147],
       [-9.067973 , -2.5795722, -3.7415686, ..., -1.9306719, -4.4729323,
        -7.713643 ],
       [-9.103502 , -2.4533033, -3.9992065, ..., -2.1038678, -4.347698 ,
        -6.2093368]], dtype=float32), 'objective/kl_coef': 0.19795724288000002, 'objective/entropy': array(6.5232973, dtype=float32), 'ppo/mean_non_score_reward': array(-0.01114109, dtype=float32), 'ppo/mean_scores': array(-0.9828125, dtype=float32), 'ppo/std_scores': array(0.04139311, dtype=float32), 'tokens/queries_len_mean': 19.0, 'tokens/queries_len_std': 0.0, 'tokens/queries_dist': array([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.],
      dtype=float32), 'tokens/responses_len_mean': 1.0, 'tokens/responses_len_std': 0.0, 'tokens/responses_dist': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=float32), 'ppo/loss/policy': array([-0.02792784], dtype=float32), 'ppo/loss/value': array([9.17182], dtype=float32), 'ppo/loss/total': array([0.88925415], dtype=float32), 'ppo/policy/entropy': array([6.3287416], dtype=float32), 'ppo/policy/approxkl': array([0.04211889], dtype=float32), 'ppo/policy/policykl': array([0.00995316], dtype=float32), 'ppo/policy/clipfrac': array([0.5257813], dtype=float32), 'ppo/policy/advantages': array([28.528786  , 28.39162   , 28.245777  , ..., 26.504858  ,
       26.239653  ,  0.49417198], dtype=float32), 'ppo/policy/advantages_mean': array([1.3541431e-07], dtype=float32), 'ppo/policy/ratio': array([1.0039215 , 1.0012461 , 0.98678577, ..., 1.0626452 , 1.257802  ,
       1.4103674 ], dtype=float32), 'ppo/returns/mean': array([-0.9939536], dtype=float32), 'ppo/returns/var': array([0.01217281], dtype=float32), 'ppo/val/vpred': array([2.8490784], dtype=float32), 'ppo/val/error': array([14.838621], dtype=float32), 'ppo/val/clipfrac': array([0.93359375], dtype=float32), 'ppo/val/mean': array([3.382141], dtype=float32), 'ppo/val/var': array([0.01292378], dtype=float32), 'ppo/val/var_explained': array([-1232.9873], dtype=float32), 'ppo/learning_rate': 5e-06, 'time/ppo/forward_pass': 0.7400882244110107, 'time/ppo/compute_rewards': 0.009529590606689453, 'time/ppo/compute_advantages': 0.0014481544494628906, 'time/ppo/optimize_step': 29.380550622940063, 'time/ppo/calc_stats': 0.21010327339172363, 'time/ppo/total': 30.341842889785767}
Epoch 1/10: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [05:25<00:00, 108.42s/it]
Epoch 2/10:   0%|                                                                                                                  | 0/3 [00:00<?, ?it/s]
[' 1', ' Choose', ' Tr', ' Choose', ' Pick', ' Try', ' Select', ' 12', ' If', ' CHO', ' (', ' We', ' Cyan', ' Red', ' Select', ' 10', ' Red', '\n', ' max', ' Default', ' Water', ' Save', ' Yellow', ' gray', ' red', ' Color', '.', '0', ' At', ' Number', ' Recommended', ' 5', ' ;', ' 100', ' ', ' Off', ' Choose', ' that', ' radio', ' 10', ' Aer', ' c', ' ', ' mostly', ' u', ' 1', ' Use', '\n', 'Sweet', ' 74', ' 1', ' Standard', ' Select', ' 1', ' a', 'out', 'Enjoy', ' submit', '\n', ' Rock', ' This', ' Set', ' 0', ' 0']
Epoch 2/10:   0%|                                                                                                                  | 0/3 [00:00<?, ?it/s]/usr/workspace/smith585/x86_miniconda/lib/python3.12/site-packages/trl/trainer/ppo_trainer.py:1305: UserWarning: KL divergence is starting to become negative: -1.16 - this might be a precursor for failed training. sometimes this happens because the generation kwargs are not correctly set. Please make sure that the generation kwargs are set correctly, or review your training hyperparameters.
  warnings.warn(
Epoch 2/10:  33%|███████████████████████████████████▎                                                                      | 1/3 [00:49<01:38, 49.38s/it]
{'objective/kl': array(0.03157574, dtype=float32), 'objective/kl_dist': array([-0.07521915,  0.11245424,  0.2605269 ,  0.08642685,  0.05411243,
        0.20564735, -0.07787025,  0.2898593 , -0.36345303,  0.41027546,
       -0.3894301 ,  0.2761529 , -0.5420685 , -0.0367099 ,  0.11013794,
        0.10157084,  0.04841208, -0.2625457 ,  0.24753809, -0.13816404,
       -0.16935682,  0.12345922,  0.332461  ,  0.20305675,  0.18773222,
       -0.18174177,  0.21375132,  0.4855938 , -0.34201002, -0.27680337,
       -0.0487504 ,  0.07927322, -0.0779568 , -0.13469696, -0.00246191,
        0.19872272, -0.0708878 , -0.16935265, -0.3007009 ,  0.02770805,
        0.14786196, -0.21125889,  0.29806983, -0.01440632, -0.09201002,
       -0.2242099 ,  0.5137496 , -0.4163345 ,  1.2984121 , -0.69719696,
       -0.11447293,  0.02392697,  0.33064312, -0.5015408 , -0.07787013,
        0.65270805,  0.8579912 ,  0.03527546, -0.32693022, -0.11746562,
        0.09548998,  0.37449336, -0.0201388 , -0.18863201], dtype=float32), 'objective/logprobs': array([[-9.160091 , -2.420899 , -3.9824939, ..., -2.2361693, -4.4712   ,
        -3.3738022],
       [-9.160091 , -2.420899 , -4.232494 , ..., -2.2747529, -4.677805 ,
        -3.7571988],
       [-9.160091 , -2.5747046, -4.166386 , ..., -2.3333855, -4.5993366,
        -8.89815  ],
       ...,
       [-9.154442 , -2.633391 , -4.2210007, ..., -2.3255954, -4.555855 ,
        -4.62996  ],
       [-9.154442 , -2.6333907, -4.2210007, ..., -2.4460154, -4.560501 ,
        -3.6097898],
       [-9.154459 , -2.4168355, -4.285193 , ..., -2.221059 , -4.565203 ,
        -3.4816098]], dtype=float32), 'objective/ref_logprobs': array([[-9.114504 , -2.442901 , -4.0344734, ..., -2.0450912, -4.443216 ,
        -3.298583 ],
       [-9.114504 , -2.442901 , -4.0344734, ..., -1.9969672, -4.5976005,
        -3.8696532],
       [-9.114505 , -2.442901 , -3.9673264, ..., -1.98563  , -4.4142184,
        -9.158677 ],
       ...,
       [-9.067972 , -2.5795722, -3.8665686, ..., -1.9977872, -4.3567553,
        -5.0044527],
       [-9.067973 , -2.5795722, -3.8665683, ..., -1.9278665, -4.52698  ,
        -3.589651 ],
       [-9.103502 , -2.4533033, -3.8742065, ..., -2.076087 , -4.365716 ,
        -3.2929778]], dtype=float32), 'objective/kl_coef': 0.19694370179645443, 'objective/entropy': array(6.422682, dtype=float32), 'ppo/mean_non_score_reward': array(-0.00621864, dtype=float32), 'ppo/mean_scores': array(-0.98476565, dtype=float32), 'ppo/std_scores': array(0.04027783, dtype=float32), 'tokens/queries_len_mean': 19.0, 'tokens/queries_len_std': 0.0, 'tokens/queries_dist': array([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
       19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.],
      dtype=float32), 'tokens/responses_len_mean': 1.0, 'tokens/responses_len_std': 0.0, 'tokens/responses_dist': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
       1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=float32), 'ppo/loss/policy': array([-0.020454], dtype=float32), 'ppo/loss/value': array([6.542389], dtype=float32), 'ppo/loss/total': array([0.63378495], dtype=float32), 'ppo/policy/entropy': array([6.412395], dtype=float32), 'ppo/policy/approxkl': array([0.02470808], dtype=float32), 'ppo/policy/policykl': array([0.00823745], dtype=float32), 'ppo/policy/clipfrac': array([0.42734376], dtype=float32), 'ppo/policy/advantages': array([17.629967  , 17.547482  , 17.459778  , ..., 15.085463  ,
       14.842002  , -0.06667893], dtype=float32), 'ppo/policy/advantages_mean': array([-3.8114376e-07], dtype=float32), 'ppo/policy/ratio': array([0.99438345, 0.99594486, 1.0541124 , ..., 1.5685441 , 1.2198608 ,
       0.85185146], dtype=float32), 'ppo/returns/mean': array([-0.99098426], dtype=float32), 'ppo/returns/var': array([0.00910057], dtype=float32), 'ppo/val/vpred': array([2.3217773], dtype=float32), 'ppo/val/error': array([11.039917], dtype=float32), 'ppo/val/clipfrac': array([0.90234375], dtype=float32), 'ppo/val/mean': array([2.7142944], dtype=float32), 'ppo/val/var': array([0.03192187], dtype=float32), 'ppo/val/var_explained': array([-1236.3927], dtype=float32), 'ppo/learning_rate': 5e-06, 'time/ppo/forward_pass': 0.6861846446990967, 'time/ppo/compute_rewards': 0.009544610977172852, 'time/ppo/compute_advantages': 0.0014460086822509766, 'time/ppo/optimize_step': 23.10506558418274, 'time/ppo/calc_stats': 0.05854654312133789, 'time/ppo/total': 23.860914945602417}
[' Switch', ' This', ' 40', ' what', ' Component', ' 1', ' disabled', ' {', 'Point', '\n', ' That', ' Select', ' 0', ' Choose', ' 288', ' #', ' Either', ' "', ' Sort', ' Black', ' RGB', ' $', ' Start', ' Requ', ' +', ' Select', ' 1', ' Black', ' 100', ' If', ' 1', ' 60', '\n', ' has', ' (', ' Fixed', ' Red', ' Red', ' At', ' moves', ' Default', ' Show', ' and', ' Control', ' choose', ' This', ' "', '\n', ' /*', ' 1', ' Choose', ' 1', ' end', ' The', ' 30', ' options', ' 1', '\n', ' Standards', '\n', ' 6', ' ${', ' or', ' */']
